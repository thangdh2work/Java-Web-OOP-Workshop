name: CI/CD - build, test, coverage, image scan, and update deployment

on:
  push:
    branches: ["main"]
    paths:
      - src/**
      - Dockerfile
  pull_request:
    paths:
      - src/**
      - Dockerfile

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build & Test (with JaCoCo)
        run: |
          mvn -q -B -DskipTests dependency:go-offline
          mvn -q -B test
          mvn -q -B jacoco:report

      - name: Publish Test & Coverage Summary
        if: always()
        run: |
          python3 - << 'PY'
          import glob, xml.etree.ElementTree as ET, os
          totals={'tests':0,'failures':0,'errors':0,'skipped':0,'time':0.0}
          for p in glob.glob('target/surefire-reports/*.xml'):
              try:
                  root=ET.parse(p).getroot()
              except Exception:
                  continue
              suites=[root] if root.tag=='testsuite' else root.findall('testsuite')
              for ts in suites:
                  a=ts.attrib
                  totals['tests']+=int(a.get('tests',0))
                  totals['failures']+=int(a.get('failures',0))
                  totals['errors']+=int(a.get('errors',0))
                  totals['skipped']+=int(a.get('skipped',0))
                  try: totals['time']+=float(a.get('time',0.0))
                  except: pass
          passed = totals['tests'] - totals['failures'] - totals['errors'] - totals['skipped']
          cov_path='target/site/jacoco/jacoco.xml'
          cov={}
          if os.path.exists(cov_path):
              try:
                  r=ET.parse(cov_path).getroot()
                  def pct(t):
                      m=c=0
                      for co in r.findall('.//counter'):
                          if co.attrib.get('type')==t:
                              m += int(co.attrib.get('missed','0'))
                              c += int(co.attrib.get('covered','0'))
                      s=m+c
                      return (100.0*c/s) if s>0 else 0.0
                  cov['LINE']=pct('LINE')
                  cov['BRANCH']=pct('BRANCH')
                  cov['INSTRUCTION']=pct('INSTRUCTION')
              except Exception:
                  pass
          with open(os.environ['GITHUB_STEP_SUMMARY'],'a',encoding='utf-8') as f:
              f.write("# üß™ Test & Coverage Summary\n\n")
              f.write("| Total | Passed | Failed | Errors | Skipped | Duration (s) |\n")
              f.write("| ---: | ---: | ---: | ---: | ---: | ---: |\n")
              f.write(f"| {totals['tests']} | {passed} | {totals['failures']} | {totals['errors']} | {totals['skipped']} | {totals['time']:.2f} |\n\n")
              if cov:
                  f.write("## üìà JaCoCo Coverage\n\n")
                  f.write("| Metric | Percent |\n|---|---:|\n")
                  for k in ['LINE','BRANCH','INSTRUCTION']:
                      if k in cov: f.write(f"| {k.title()} | {cov[k]:.2f}% |\n")
                  f.write("\n")
              else:
                  f.write("> ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y `target/site/jacoco/jacoco.xml` ‚Äî h√£y ch·∫Øc `mvn jacoco:report` ƒë√£ ch·∫°y.\n\n")
          PY

      - name: Archive coverage report (JaCoCo)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Archive Surefire reports (JUnit XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/

  build-and-push-image:
    needs: build-test-coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

  trivy-scan:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy FS scan (SARIF)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "sarif"
          output: "trivy-fs.sarif"
          severity: "HIGH,CRITICAL"

      - name: Run Trivy Image scan (SARIF)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: "ghcr.io/${{ github.repository }}:${{ github.sha }}"
          format: "sarif"
          output: "trivy-image.sarif"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"

      - name: Upload SARIF (Image)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif
          category: "image-scan"

      - name: Upload SARIF (FS)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif
          category: "fs-scan"

      - name: Run Trivy FS scan (JSON for summary)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: "fs"
          format: "json"
          output: "trivy-fs.json"
          ignore-unfixed: true
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          hide-progress: true
          exit-code: "0"

      - name: Run Trivy Image scan (JSON for summary)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: "ghcr.io/${{ github.repository }}:${{ github.sha }}"
          format: "json"
          output: "trivy-image.json"
          ignore-unfixed: true
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          vuln-type: "os,library"
          hide-progress: true
          exit-code: "0"

      - name: Build GitHub Actions Job Summary
        run: |
          echo "# üîç Trivy Security Report" >> $GITHUB_STEP_SUMMARY
          echo "_Commit: \`${GITHUB_SHA}\`  ‚Ä¢  Image: \`ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA}\`_" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          summarize () {
            local title="$1"; local file="$2"
            echo "## ${title}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|---|---:|" >> $GITHUB_STEP_SUMMARY
            for sev in CRITICAL HIGH MEDIUM LOW UNKNOWN; do
              cnt=$(jq -r '
                [
                  .Results[]?
                  | .Vulnerabilities[]?
                  | select(.Severity=="'"$sev"'")
                ] | length
              ' "$file")
              echo "| $sev | $cnt |" >> $GITHUB_STEP_SUMMARY
            done

            # Top 10 issues (g·ªçn g√†ng)
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "<details><summary>Top 10 findings</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Severity | Package | Installed | Fixed | ID | Title |" >> $GITHUB_STEP_SUMMARY
            echo "|---|---|---|---|---|---|" >> $GITHUB_STEP_SUMMARY
            jq -r '
              .Results[]?
              | .Vulnerabilities[]?
              | [
                  .Severity,
                  .PkgName,
                  (.InstalledVersion // "-"),
                  (.FixedVersion // "-"),
                  .VulnerabilityID,
                  (.Title // .Description // "-" | gsub("\\n"; " "))
                ]
              | @tsv
            ' "$file" \
            | head -n 10 \
            | while IFS=$'\t' read -r sev pkg inst fixed vid title; do
                printf "| %s | %s | %s | %s | %s | %s |\n" "$sev" "$pkg" "$inst" "$fixed" "$vid" "${title:0:120}"
              done >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          }

          summarize "üìÅ Filesystem scan (repo workspace)" trivy-fs.json
          summarize "üê≥ Image scan (ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA})" trivy-image.json

  update-deployment:
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: "thangdh2work/devops-infrastructure-workshop"
          token: ${{ secrets.GIT_PAT }}

      - name: Ensure file exists
        run: |
          FILE="studentmgr/deployment.yaml"
          if [ ! -f "$FILE" ]; then
            echo "deployment.yaml not found"
            exit 1
          fi

      - name: Replace image tag in deployment.yaml
        env:
          TAG: ${{ github.sha }}
        run: |
          FILE="studentmgr/deployment.yaml"
          sed -E -i "s#(image:[[:space:]]*[^:]+:)[^[:space:],]+#\1${TAG}#g" "$FILE"
          echo "Updated $FILE:"
          sed -n '1,200p' "$FILE"

      - name: Commit and push change
        run: |
          FILE="studentmgr/deployment.yaml"
          if git status --porcelain | grep -q "$FILE"; then
            git config user.email thangdh2work@gmail.com
            git config user.name thangdh2work
            git add "$FILE"
            git commit -m "chore(cd): update deployment image tag to ${{ github.sha }}"
            git push origin main
          else
            echo "No changes to commit."
          fi
